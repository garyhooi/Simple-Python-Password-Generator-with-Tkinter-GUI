#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.2
#  in conjunction with Tcl version 8.6
#    May 09, 2020 11:21:34 PM CST  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import PasswordGenerator_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    PasswordGenerator_support.set_Tk_var()
    top = Toplevel1 (root)
    PasswordGenerator_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    PasswordGenerator_support.set_Tk_var()
    top = Toplevel1 (w)
    PasswordGenerator_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def exitWindow(self):
        exit()
    
    def generatePwd(self):
        checkSymbol = self.btn_cb_symbol.get()
        print(checkSymbol)

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("600x450+694+283")
        top.minsize(120, 1)
        top.maxsize(1924, 1061)
        top.resizable(1, 1)
        top.title("Password Generator")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.btn_generate = tk.Button(top)
        self.btn_generate.place(relx=0.3, rely=0.6, height=44, width=107)
        self.btn_generate.configure(activebackground="#ececec")
        self.btn_generate.configure(activeforeground="#000000")
        self.btn_generate.configure(background="#d9d9d9")
        self.btn_generate.configure(disabledforeground="#a3a3a3")
        self.btn_generate.configure(foreground="#000000")
        self.btn_generate.configure(highlightbackground="#d9d9d9")
        self.btn_generate.configure(highlightcolor="black")
        self.btn_generate.configure(pady="0")
        self.btn_generate.configure(text='''Generate''')
        self.btn_generate.configure(command=self.generatePwd)

        self.btn_exit = tk.Button(top)
        self.btn_exit.place(relx=0.55, rely=0.6, height=44, width=107)
        self.btn_exit.configure(activebackground="#ececec")
        self.btn_exit.configure(activeforeground="#000000")
        self.btn_exit.configure(background="#d9d9d9")
        self.btn_exit.configure(disabledforeground="#a3a3a3")
        self.btn_exit.configure(foreground="#000000")
        self.btn_exit.configure(highlightbackground="#d9d9d9")
        self.btn_exit.configure(highlightcolor="black")
        self.btn_exit.configure(pady="0")
        self.btn_exit.configure(text='''Exit''')
        self.btn_exit.configure(command=self.exitWindow)

        self.et_pwd = tk.Entry(top)
        self.et_pwd.place(relx=0.3, rely=0.267,height=37, relwidth=0.323)
        self.et_pwd.configure(background="white")
        self.et_pwd.configure(disabledforeground="#a3a3a3")
        self.et_pwd.configure(font="TkFixedFont")
        self.et_pwd.configure(foreground="#000000")
        self.et_pwd.configure(highlightbackground="#d9d9d9")
        self.et_pwd.configure(highlightcolor="black")
        self.et_pwd.configure(insertbackground="black")
        self.et_pwd.configure(selectbackground="#c4c4c4")
        self.et_pwd.configure(selectforeground="black")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.283, rely=0.178, height=31, width=186)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font="-family {Segoe UI} -size 14")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''Your new password:''')

        self.btn_copy = tk.Button(top)
        self.btn_copy.place(relx=0.633, rely=0.267, height=34, width=49)
        self.btn_copy.configure(activebackground="#ececec")
        self.btn_copy.configure(activeforeground="#000000")
        self.btn_copy.configure(background="#d9d9d9")
        self.btn_copy.configure(disabledforeground="#a3a3a3")
        self.btn_copy.configure(foreground="#000000")
        self.btn_copy.configure(highlightbackground="#d9d9d9")
        self.btn_copy.configure(highlightcolor="black")
        self.btn_copy.configure(pady="0")
        self.btn_copy.configure(text='''Copy''')

        self.btn_cb_symbol = tk.Checkbutton(top)
        self.btn_cb_symbol.place(relx=0.3, rely=0.378, relheight=0.056
                , relwidth=0.113)
        self.btn_cb_symbol.configure(activebackground="#ececec")
        self.btn_cb_symbol.configure(activeforeground="#000000")
        self.btn_cb_symbol.configure(background="#d9d9d9")
        self.btn_cb_symbol.configure(disabledforeground="#a3a3a3")
        self.btn_cb_symbol.configure(foreground="#000000")
        self.btn_cb_symbol.configure(highlightbackground="#d9d9d9")
        self.btn_cb_symbol.configure(highlightcolor="black")
        self.btn_cb_symbol.configure(justify='left')
        self.btn_cb_symbol.configure(text='''Symbol''')
        self.btn_cb_symbol.configure(variable=PasswordGenerator_support.che49)

        self.sb_length = tk.Spinbox(top, from_=1.0, to=100.0)
        self.sb_length.place(relx=0.317, rely=0.444, relheight=0.042
                , relwidth=0.208)
        self.sb_length.configure(activebackground="#f9f9f9")
        self.sb_length.configure(background="white")
        self.sb_length.configure(buttonbackground="#d9d9d9")
        self.sb_length.configure(disabledforeground="#a3a3a3")
        self.sb_length.configure(font="TkDefaultFont")
        self.sb_length.configure(foreground="black")
        self.sb_length.configure(highlightbackground="black")
        self.sb_length.configure(highlightcolor="black")
        self.sb_length.configure(insertbackground="black")
        self.sb_length.configure(readonlybackground="#f0f0f0f0f0f0")
        self.sb_length.configure(selectbackground="#c4c4c4")
        self.sb_length.configure(selectforeground="black")
        self.sb_length.configure(textvariable=PasswordGenerator_support.spinbox)
        self.value_list = ['8',]
        self.sb_length.configure(values=self.value_list)

        self.btn_cb_alphabet = tk.Checkbutton(top)
        self.btn_cb_alphabet.place(relx=0.583, rely=0.378, relheight=0.056
                , relwidth=0.118)
        self.btn_cb_alphabet.configure(activebackground="#ececec")
        self.btn_cb_alphabet.configure(activeforeground="#000000")
        self.btn_cb_alphabet.configure(background="#d9d9d9")
        self.btn_cb_alphabet.configure(disabledforeground="#a3a3a3")
        self.btn_cb_alphabet.configure(foreground="#000000")
        self.btn_cb_alphabet.configure(highlightbackground="#d9d9d9")
        self.btn_cb_alphabet.configure(highlightcolor="black")
        self.btn_cb_alphabet.configure(justify='left')
        self.btn_cb_alphabet.configure(text='''Alphabet''')
        self.btn_cb_alphabet.configure(variable=PasswordGenerator_support.che46)

        self.btn_cb_number = tk.Checkbutton(top)
        self.btn_cb_number.place(relx=0.433, rely=0.378, relheight=0.056
                , relwidth=0.118)
        self.btn_cb_number.configure(activebackground="#ececec")
        self.btn_cb_number.configure(activeforeground="#000000")
        self.btn_cb_number.configure(background="#d9d9d9")
        self.btn_cb_number.configure(disabledforeground="#a3a3a3")
        self.btn_cb_number.configure(foreground="#000000")
        self.btn_cb_number.configure(highlightbackground="#d9d9d9")
        self.btn_cb_number.configure(highlightcolor="black")
        self.btn_cb_number.configure(justify='left')
        self.btn_cb_number.configure(text='''Number''')
        self.btn_cb_number.configure(variable=PasswordGenerator_support.che47)

if __name__ == '__main__':
    vp_start_gui()





